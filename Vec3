#!/usr/bin/env python

import math


class Vec3:
    def __init__(self, x, y, z):
        self.x, self.y, self.z = x, y, z

    def __str__(self):
        return f'({self.x}, {self.y}, {self.z})'

    def __add__(self, otherVec3):
        xres = self.x + otherVec3.x
        yres = self.y + otherVec3.y
        zres = self.z + otherVec3.z
        return Vec3(xres, yres, zres)

    def __sub__(self, otherVec3):
        xres = self.x - otherVec3.x
        yres = self.y - otherVec3.y
        zres = self.z - otherVec3.z
        return Vec3(xres, yres, zres)

    def __mul__(self, scalar):
        # scalar multiplication
        return Vec3(scalar * self.x, scalar * self.y, scalar * self.z)

    def __rmul__(self, scalar):
        return self.__mul__(scalar)

    def __truediv__(self, scalar):
        return Vec3(self.x / scalar, self.y / scalar, self.z / scalar)

    def __neg__(self):
        return Vec3(-self.x, -self.y, -self.z)

    def squaredLength(self):
        return self.x ** 2 + self.y ** 2 + self.z ** 2

    def length(self):
        return math.sqrt(self.squaredLength)

    def unitVector(self):
        return self.__truediv__(self.length)
